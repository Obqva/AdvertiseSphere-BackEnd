services:
  db:
    image: postgres:14.8-alpine
    restart: always
    ports:
      - 5432:5432/tcp
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: Inventory
    volumes: 
      - db:/var/lib/postgresql/data

  cache:
    image: redis:7.0.11-alpine
    restart: always
    ports:
      - 6379:6379
    container_name: redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: 
      - cache:/data

  redpanda:
    image: redpandadata/console:latest
    ports:
    - 8080:8080
    container_name: redpanda
    environment:
      KAFKA_BROKERS: kafka:29093

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    ports:
      - 2181:2181
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    ports:
      - 9093:9093
      - 9998:9998
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      JMX_PORT: 9998
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9998

  kafka-init-topics:
    image: confluentinc/cp-kafka:5.3.1
    volumes:
       - ./message.json:/data/message.json
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
               cub kafka-ready -b kafka1:29093 1 30 && \
               kafka-topics --create --topic panasonic.factorymodel.coreapp.topic --partitions 32 --replication-factor 1 --if-not-exists --zookeeper zookeeper1:2181 && \
               kafka-topics --create --topic panasonic.inventory.coreapp.topic --partitions 32 --replication-factor 1 --if-not-exists --zookeeper zookeeper1:2181 && \
               kafka-topics --create --topic panasonic.inventory.coreapp.entitypublisher.topic --partitions 32 --replication-factor 1 --if-not-exists --zookeeper zookeeper1:2181'"

volumes:
  db:
    driver: local
  cache:
    driver: local
